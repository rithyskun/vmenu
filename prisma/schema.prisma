// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  name         String?
  email        String  @unique
  password     String
  profileImage String?
  status       Boolean @default(true)
  isAdmin      Boolean @default(false)
  role         Role    @default(USER)

  // Refresh token
  refreshToken RefreshToken[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model RefreshToken {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  token String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

model Category {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  categoryName  String  @unique
  categoryImage String?

  product Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  productName        String  @unique
  productDescription String?
  salePrice          Float
  productImage       String?
  status             Boolean @default(true)
  feature            Boolean @default(false)
  favorite           Boolean @default(false)
  promotion          Boolean @default(false)

  categoryId String    @db.ObjectId
  category   Category? @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderDetail OrdersDetail[]
}

model MediaFile {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  url              String
  providerPublicId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  phone   String
  address String?
  status  Boolean @default(false)
  qrcode  String
  total   Float

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  ordersDetail OrdersDetail[]
}

model OrdersDetail {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  salePrice Float

  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])

  orderId String @db.ObjectId
  order   Order  @relation(fields: [orderId], references: [id])
}

model Setting {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  configKey   String
  configValue String
}
